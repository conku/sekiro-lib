plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //api 'io.netty:netty-codec:4.0.44.Final'
    //api 'io.netty:netty-handler:4.0.44.Final'

    implementation 'io.netty:netty-all:4.1.68.Final' // 确保使用正确的版本
    compileOnly 'org.slf4j:slf4j-api:1.7.25'
    compileOnly 'com.google.android:android:4.1.1.4'
    compileOnly 'com.android.support:support-annotations:28.0.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


group 'com.virjar'
version '1.0.3-SNAPSHOT'


compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    [compileJava]*.options*.encoding = 'UTF-8'
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'  // 推荐的写法
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'  // 推荐的写法
}

// javadoc 配置，这里是自定义了 java doc 的一些配置
javadoc {
    description = "Generates project-level javadoc for use in -javadoc jar"

    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.author = true
    options.version = true
    options.header = project.name
    options.addStringOption('Xdoclint:none', '-quiet')

    // suppress warnings due to cross-module @see and @link references;
    // note that global 'api' task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message
    options.encoding = "UTF-8"  //编码一定要配置否则直接出错
    options.charSet = 'UTF-8'
}

def getRepositoryUsername() {
    return hasProperty('MAVEN_USERNAME') ? MAVEN_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('MAVEN_PASSWORD') ? MAVEN_PASSWORD : ""
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = 'sekiro-api'
            version = project.version

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = 'sonatypeRepository'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
//            credentials {
//                username = getRepositoryUsername()
//                password = getRepositoryPassword()
//            }
        }
    }
}
// 签名配置，注意这里的顺序，今天第一次知道 gradle 中的 task 等配置也是有顺序的
// 必须在 publishing 配置之后
signing {
    sign publishing.publications.mavenJava
}
